/**
 * Location API
 * Geolocation, Geocoding and Maps
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAICell_schema.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAICell_schema::OAICell_schema(QString json) {
    init();
    this->fromJson(json);
}

OAICell_schema::OAICell_schema() {
    init();
}

OAICell_schema::~OAICell_schema() {
    this->cleanup();
}

void
OAICell_schema::init() {
    lac = 0L;
    m_lac_isSet = false;
    cid = 0L;
    m_cid_isSet = false;
    radio = new OAIRadio_schema();
    m_radio_isSet = false;
    mcc = 0L;
    m_mcc_isSet = false;
    mnc = 0L;
    m_mnc_isSet = false;
    signal = 0L;
    m_signal_isSet = false;
    psc = 0L;
    m_psc_isSet = false;
    asu = 0L;
    m_asu_isSet = false;
    ta = 0L;
    m_ta_isSet = false;
}

void
OAICell_schema::cleanup() {


    if(radio != nullptr) { 
        delete radio;
    }






}

OAICell_schema*
OAICell_schema::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAICell_schema::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&lac, pJson["lac"], "qint64", "");
    
    ::OpenAPI::setValue(&cid, pJson["cid"], "qint64", "");
    
    ::OpenAPI::setValue(&radio, pJson["radio"], "OAIRadio_schema", "OAIRadio_schema");
    
    ::OpenAPI::setValue(&mcc, pJson["mcc"], "qint64", "");
    
    ::OpenAPI::setValue(&mnc, pJson["mnc"], "qint64", "");
    
    ::OpenAPI::setValue(&signal, pJson["signal"], "qint64", "");
    
    ::OpenAPI::setValue(&psc, pJson["psc"], "qint64", "");
    
    ::OpenAPI::setValue(&asu, pJson["asu"], "qint64", "");
    
    ::OpenAPI::setValue(&ta, pJson["ta"], "qint64", "");
    
}

QString
OAICell_schema::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAICell_schema::asJsonObject() {
    QJsonObject obj;
    if(m_lac_isSet){
        obj.insert("lac", QJsonValue(lac));
    }
    if(m_cid_isSet){
        obj.insert("cid", QJsonValue(cid));
    }
    if((radio != nullptr) && (radio->isSet())){
        toJsonValue(QString("radio"), radio, obj, QString("OAIRadio_schema"));
    }
    if(m_mcc_isSet){
        obj.insert("mcc", QJsonValue(mcc));
    }
    if(m_mnc_isSet){
        obj.insert("mnc", QJsonValue(mnc));
    }
    if(m_signal_isSet){
        obj.insert("signal", QJsonValue(signal));
    }
    if(m_psc_isSet){
        obj.insert("psc", QJsonValue(psc));
    }
    if(m_asu_isSet){
        obj.insert("asu", QJsonValue(asu));
    }
    if(m_ta_isSet){
        obj.insert("ta", QJsonValue(ta));
    }

    return obj;
}

qint64
OAICell_schema::getLac() {
    return lac;
}
void
OAICell_schema::setLac(qint64 lac) {
    this->lac = lac;
    this->m_lac_isSet = true;
}

qint64
OAICell_schema::getCid() {
    return cid;
}
void
OAICell_schema::setCid(qint64 cid) {
    this->cid = cid;
    this->m_cid_isSet = true;
}

OAIRadio_schema*
OAICell_schema::getRadio() {
    return radio;
}
void
OAICell_schema::setRadio(OAIRadio_schema* radio) {
    this->radio = radio;
    this->m_radio_isSet = true;
}

qint64
OAICell_schema::getMcc() {
    return mcc;
}
void
OAICell_schema::setMcc(qint64 mcc) {
    this->mcc = mcc;
    this->m_mcc_isSet = true;
}

qint64
OAICell_schema::getMnc() {
    return mnc;
}
void
OAICell_schema::setMnc(qint64 mnc) {
    this->mnc = mnc;
    this->m_mnc_isSet = true;
}

qint64
OAICell_schema::getSignal() {
    return signal;
}
void
OAICell_schema::setSignal(qint64 signal) {
    this->signal = signal;
    this->m_signal_isSet = true;
}

qint64
OAICell_schema::getPsc() {
    return psc;
}
void
OAICell_schema::setPsc(qint64 psc) {
    this->psc = psc;
    this->m_psc_isSet = true;
}

qint64
OAICell_schema::getAsu() {
    return asu;
}
void
OAICell_schema::setAsu(qint64 asu) {
    this->asu = asu;
    this->m_asu_isSet = true;
}

qint64
OAICell_schema::getTa() {
    return ta;
}
void
OAICell_schema::setTa(qint64 ta) {
    this->ta = ta;
    this->m_ta_isSet = true;
}


bool
OAICell_schema::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_lac_isSet){ isObjectUpdated = true; break;}
        if(m_cid_isSet){ isObjectUpdated = true; break;}
        if(radio != nullptr && radio->isSet()){ isObjectUpdated = true; break;}
        if(m_mcc_isSet){ isObjectUpdated = true; break;}
        if(m_mnc_isSet){ isObjectUpdated = true; break;}
        if(m_signal_isSet){ isObjectUpdated = true; break;}
        if(m_psc_isSet){ isObjectUpdated = true; break;}
        if(m_asu_isSet){ isObjectUpdated = true; break;}
        if(m_ta_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}


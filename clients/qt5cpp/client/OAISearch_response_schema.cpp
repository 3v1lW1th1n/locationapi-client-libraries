/**
 * Location API
 * Geolocation, Geocoding and Maps
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAISearch_response_schema.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAISearch_response_schema::OAISearch_response_schema(QString json) {
    init();
    this->fromJson(json);
}

OAISearch_response_schema::OAISearch_response_schema() {
    init();
}

OAISearch_response_schema::~OAISearch_response_schema() {
    this->cleanup();
}

void
OAISearch_response_schema::init() {
    status = new QString("");
    m_status_isSet = false;
    balance = 0.0;
    m_balance_isSet = false;
    addresses = new QList<OAIAddress_schema*>();
    m_addresses_isSet = false;
}

void
OAISearch_response_schema::cleanup() {
    if(status != nullptr) { 
        delete status;
    }
    if(balance != nullptr) { 
        delete balance;
    }
    if(addresses != nullptr) { 
        auto arr = addresses;
        for(auto o: *arr) { 
            delete o;
        }
        delete addresses;
    }
}

OAISearch_response_schema*
OAISearch_response_schema::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAISearch_response_schema::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&status, pJson["status"], "QString", "QString");
    
    ::OpenAPI::setValue(&balance, pJson["balance"], "OAINumber", "OAINumber");
    
    
    ::OpenAPI::setValue(&addresses, pJson["addresses"], "QList", "OAIAddress_schema");
}

QString
OAISearch_response_schema::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAISearch_response_schema::asJsonObject() {
    QJsonObject obj;
    if(status != nullptr && *status != QString("")){
        toJsonValue(QString("status"), status, obj, QString("QString"));
    }
    if((balance != nullptr) && (balance->isSet())){
        toJsonValue(QString("balance"), balance, obj, QString("OAINumber"));
    }
    if(addresses->size() > 0){
        toJsonArray((QList<void*>*)addresses, obj, "addresses", "OAIAddress_schema");
    }

    return obj;
}

QString*
OAISearch_response_schema::getStatus() {
    return status;
}
void
OAISearch_response_schema::setStatus(QString* status) {
    this->status = status;
    this->m_status_isSet = true;
}

OAINumber*
OAISearch_response_schema::getBalance() {
    return balance;
}
void
OAISearch_response_schema::setBalance(OAINumber* balance) {
    this->balance = balance;
    this->m_balance_isSet = true;
}

QList<OAIAddress_schema*>*
OAISearch_response_schema::getAddresses() {
    return addresses;
}
void
OAISearch_response_schema::setAddresses(QList<OAIAddress_schema*>* addresses) {
    this->addresses = addresses;
    this->m_addresses_isSet = true;
}


bool
OAISearch_response_schema::isSet(){
    bool isObjectUpdated = false;
    do{
        if(status != nullptr && *status != QString("")){ isObjectUpdated = true; break;}
        if(balance != nullptr && balance->isSet()){ isObjectUpdated = true; break;}
        if(addresses->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}


/**
 * Location API
 * Geolocation, Geocoding and Maps
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGeolocation_response_schema.h
 *
 * The response will be a JSON object.
 */

#ifndef OAIGeolocation_response_schema_H_
#define OAIGeolocation_response_schema_H_

#include <QJsonObject>


#include "OAIAddress_details_schema.h"
#include "OAIFallback_schema.h"
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIGeolocation_response_schema: public OAIObject {
public:
    OAIGeolocation_response_schema();
    OAIGeolocation_response_schema(QString json);
    ~OAIGeolocation_response_schema();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIGeolocation_response_schema* fromJson(QString jsonString) override;

    QString* getStatus();
    void setStatus(QString* status);

    QString* getMessage();
    void setMessage(QString* message);

    qint64 getBalance();
    void setBalance(qint64 balance);

    qint64 getBalanceSlots();
    void setBalanceSlots(qint64 balance_slots);

    double getLat();
    void setLat(double lat);

    double getLon();
    void setLon(double lon);

    qint64 getAccuracy();
    void setAccuracy(qint64 accuracy);

    QString* getAddress();
    void setAddress(QString* address);

    OAIAddress_details_schema* getAddressDetails();
    void setAddressDetails(OAIAddress_details_schema* address_details);

    qint32 getAged();
    void setAged(qint32 aged);

    OAIFallback_schema* getFallback();
    void setFallback(OAIFallback_schema* fallback);


    virtual bool isSet() override;

private:
    QString* status;
    bool m_status_isSet;

    QString* message;
    bool m_message_isSet;

    qint64 balance;
    bool m_balance_isSet;

    qint64 balance_slots;
    bool m_balance_slots_isSet;

    double lat;
    bool m_lat_isSet;

    double lon;
    bool m_lon_isSet;

    qint64 accuracy;
    bool m_accuracy_isSet;

    QString* address;
    bool m_address_isSet;

    OAIAddress_details_schema* address_details;
    bool m_address_details_isSet;

    qint32 aged;
    bool m_aged_isSet;

    OAIFallback_schema* fallback;
    bool m_fallback_isSet;

};

}

#endif /* OAIGeolocation_response_schema_H_ */

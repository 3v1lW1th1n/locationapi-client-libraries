/**
 * Location API
 * Geolocation, Geocoding and Maps
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIFallback_schema.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIFallback_schema::OAIFallback_schema(QString json) {
    init();
    this->fromJson(json);
}

OAIFallback_schema::OAIFallback_schema() {
    init();
}

OAIFallback_schema::~OAIFallback_schema() {
    this->cleanup();
}

void
OAIFallback_schema::init() {
    all = new OAIAll_schema();
    m_all_isSet = false;
    ipf = new OAIIpf_schema();
    m_ipf_isSet = false;
    lacf = new OAILacf_schema();
    m_lacf_isSet = false;
    scf = new OAIScf_schema();
    m_scf_isSet = false;
}

void
OAIFallback_schema::cleanup() {
    if(all != nullptr) { 
        delete all;
    }
    if(ipf != nullptr) { 
        delete ipf;
    }
    if(lacf != nullptr) { 
        delete lacf;
    }
    if(scf != nullptr) { 
        delete scf;
    }
}

OAIFallback_schema*
OAIFallback_schema::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIFallback_schema::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&all, pJson["all"], "OAIAll_schema", "OAIAll_schema");
    
    ::OpenAPI::setValue(&ipf, pJson["ipf"], "OAIIpf_schema", "OAIIpf_schema");
    
    ::OpenAPI::setValue(&lacf, pJson["lacf"], "OAILacf_schema", "OAILacf_schema");
    
    ::OpenAPI::setValue(&scf, pJson["scf"], "OAIScf_schema", "OAIScf_schema");
    
}

QString
OAIFallback_schema::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIFallback_schema::asJsonObject() {
    QJsonObject obj;
    if((all != nullptr) && (all->isSet())){
        toJsonValue(QString("all"), all, obj, QString("OAIAll_schema"));
    }
    if((ipf != nullptr) && (ipf->isSet())){
        toJsonValue(QString("ipf"), ipf, obj, QString("OAIIpf_schema"));
    }
    if((lacf != nullptr) && (lacf->isSet())){
        toJsonValue(QString("lacf"), lacf, obj, QString("OAILacf_schema"));
    }
    if((scf != nullptr) && (scf->isSet())){
        toJsonValue(QString("scf"), scf, obj, QString("OAIScf_schema"));
    }

    return obj;
}

OAIAll_schema*
OAIFallback_schema::getAll() {
    return all;
}
void
OAIFallback_schema::setAll(OAIAll_schema* all) {
    this->all = all;
    this->m_all_isSet = true;
}

OAIIpf_schema*
OAIFallback_schema::getIpf() {
    return ipf;
}
void
OAIFallback_schema::setIpf(OAIIpf_schema* ipf) {
    this->ipf = ipf;
    this->m_ipf_isSet = true;
}

OAILacf_schema*
OAIFallback_schema::getLacf() {
    return lacf;
}
void
OAIFallback_schema::setLacf(OAILacf_schema* lacf) {
    this->lacf = lacf;
    this->m_lacf_isSet = true;
}

OAIScf_schema*
OAIFallback_schema::getScf() {
    return scf;
}
void
OAIFallback_schema::setScf(OAIScf_schema* scf) {
    this->scf = scf;
    this->m_scf_isSet = true;
}


bool
OAIFallback_schema::isSet(){
    bool isObjectUpdated = false;
    do{
        if(all != nullptr && all->isSet()){ isObjectUpdated = true; break;}
        if(ipf != nullptr && ipf->isSet()){ isObjectUpdated = true; break;}
        if(lacf != nullptr && lacf->isSet()){ isObjectUpdated = true; break;}
        if(scf != nullptr && scf->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}


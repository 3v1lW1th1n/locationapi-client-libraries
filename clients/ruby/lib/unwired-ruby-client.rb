=begin
#Location API

#Geolocation, Geocoding and Maps

OpenAPI spec version: 2.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 3.3.4

=end

# Common files
require 'unwired-ruby-client/api_client'
require 'unwired-ruby-client/api_error'
require 'unwired-ruby-client/version'
require 'unwired-ruby-client/configuration'

# Models
require 'unwired-ruby-client/models/address_details_schema'
require 'unwired-ruby-client/models/address_schema'
require 'unwired-ruby-client/models/all_schema'
require 'unwired-ruby-client/models/balance_response_schema'
require 'unwired-ruby-client/models/bt_schema'
require 'unwired-ruby-client/models/cell_schema'
require 'unwired-ruby-client/models/error_schema'
require 'unwired-ruby-client/models/fallback_schema'
require 'unwired-ruby-client/models/geolocation_address_schema'
require 'unwired-ruby-client/models/geolocation_error_schema'
require 'unwired-ruby-client/models/geolocation_response_schema'
require 'unwired-ruby-client/models/geolocation_schema'
require 'unwired-ruby-client/models/ipf_schema'
require 'unwired-ruby-client/models/lacf_schema'
require 'unwired-ruby-client/models/radio_schema'
require 'unwired-ruby-client/models/reverse_response_schema'
require 'unwired-ruby-client/models/scf_schema'
require 'unwired-ruby-client/models/search_response_schema'
require 'unwired-ruby-client/models/timezone_response_schema'
require 'unwired-ruby-client/models/timezone_schema'
require 'unwired-ruby-client/models/wifi_schema'

# APIs
require 'unwired-ruby-client/api/balance_api'
require 'unwired-ruby-client/api/geolocation_api'
require 'unwired-ruby-client/api/reverse_api'
require 'unwired-ruby-client/api/search_api'
require 'unwired-ruby-client/api/timezone_api'

module unwiredClient
  class << self
    # Customize default settings for the SDK using block.
    #   unwiredClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end

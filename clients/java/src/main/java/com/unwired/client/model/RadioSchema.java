/*
 * Location API
 * Geolocation, Geocoding and Maps
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.unwired.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Radio type of the device. Supported values are ‘gsm’, ‘cdma’, ‘umts’ and ‘lte’. This field should be included for more accurate results.
 */
@JsonAdapter(RadioSchema.Adapter.class)
public enum RadioSchema {
  
  GSM_("\"gsm\""),
  
  UTMS_("\"utms\""),
  
  CDMA_("\"cdma\""),
  
  LTE_("\"lte\"");

  private String value;

  RadioSchema(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static RadioSchema fromValue(String text) {
    for (RadioSchema b : RadioSchema.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + text + "'");
  }

  public static class Adapter extends TypeAdapter<RadioSchema> {
    @Override
    public void write(final JsonWriter jsonWriter, final RadioSchema enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public RadioSchema read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return RadioSchema.fromValue(String.valueOf(value));
    }
  }
}


/* 
 * Location API
 *
 * Geolocation, Geocoding and Maps
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use std::rc::Rc;
use std::borrow::Borrow;

use hyper;
use serde_json;
use futures::Future;

use super::{Error, configuration};
use super::request as __internal_request;

pub struct GEOLOCATIONApiClient<C: hyper::client::Connect> {
    configuration: Rc<configuration::Configuration<C>>,
}

impl<C: hyper::client::Connect> GEOLOCATIONApiClient<C> {
    pub fn new(configuration: Rc<configuration::Configuration<C>>) -> GEOLOCATIONApiClient<C> {
        GEOLOCATIONApiClient {
            configuration: configuration,
        }
    }
}

pub trait GEOLOCATIONApi {
    fn geolocation(&self, geolocation_schema: ::models::GeolocationSchema) -> Box<Future<Item = Value, Error = Error<serde_json::Value>>>;
}


impl<C: hyper::client::Connect>GEOLOCATIONApi for GEOLOCATIONApiClient<C> {
    fn geolocation(&self, geolocation_schema: ::models::GeolocationSchema) -> Box<Future<Item = Value, Error = Error<serde_json::Value>>> {
        __internal_request::Request::new(hyper::Method::Post, "/process.php".to_string())
            .with_body_param(geolocation_schema)
            .execute(self.configuration.borrow())
    }

}

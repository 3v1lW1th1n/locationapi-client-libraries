//
// GeolocationSchema.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct GeolocationSchema: Codable {

    public var token: String?
    /** ID of the device, in case you are in a per-device plan. This could be any unique string such as an IMEI, IMSI, phone number or a hash of any of the previous values, etc. Maximum accepted length is 20 chars, and values should only be alphanumeric (a-z, 0-9) */
    public var _id: String?
    public var radio: RadioSchema?
    /** \&quot;Mobile Country Code of your operator’s network represented by an integer (Optional). Range: 0 to 999.\&quot; */
    public var mcc: Int64?
    /** Mobile Network Code of your operator’s network represented by an integer (Optional). Range: 0 to 999. On CDMA, provide the System ID or SID, with range: 1 to 32767. */
    public var mnc: Int64?
    /** An array of cell ID objects */
    public var cells: [CellSchema]?
    /** An array of WiFi objects visible to the device. */
    public var wifi: [WifiSchema]?
    public var fallbacks: FallbackSchema?
    public var address: GeolocationAddressSchema?
    /** IP address of device. */
    public var ip: String?
    public var bt: BtSchema?

    public init(token: String?, _id: String?, radio: RadioSchema?, mcc: Int64?, mnc: Int64?, cells: [CellSchema]?, wifi: [WifiSchema]?, fallbacks: FallbackSchema?, address: GeolocationAddressSchema?, ip: String?, bt: BtSchema?) {
        self.token = token
        self._id = _id
        self.radio = radio
        self.mcc = mcc
        self.mnc = mnc
        self.cells = cells
        self.wifi = wifi
        self.fallbacks = fallbacks
        self.address = address
        self.ip = ip
        self.bt = bt
    }

    public enum CodingKeys: String, CodingKey { 
        case token
        case _id = "id"
        case radio
        case mcc
        case mnc
        case cells
        case wifi
        case fallbacks
        case address
        case ip
        case bt
    }


}


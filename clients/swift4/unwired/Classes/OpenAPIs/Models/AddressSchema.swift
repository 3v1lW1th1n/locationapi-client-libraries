//
// AddressSchema.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


/** Address object found for the search query */

public struct AddressSchema: Codable {

    /** Latitude of the given location (decimal) */
    public var lat: String?
    /** Longitude of the given location (decimal) */
    public var lon: String?
    /** Matched Address name for the given location */
    public var displayName: String?
    /** House Number */
    public var houseNumber: String?
    /** Road Name */
    public var road: String?
    /** Neighbourhood */
    public var neighborhood: String?
    /** Suburb */
    public var suburb: String?
    /** City name (normalized form of city, town, village, hamlet) */
    public var city: String?
    /** County name (normalized form of county, state_district) */
    public var county: String?
    /** Country name */
    public var country: String?
    /** Country code */
    public var countryCode: String?
    /** Postal code */
    public var postalCode: String?

    public init(lat: String?, lon: String?, displayName: String?, houseNumber: String?, road: String?, neighborhood: String?, suburb: String?, city: String?, county: String?, country: String?, countryCode: String?, postalCode: String?) {
        self.lat = lat
        self.lon = lon
        self.displayName = displayName
        self.houseNumber = houseNumber
        self.road = road
        self.neighborhood = neighborhood
        self.suburb = suburb
        self.city = city
        self.county = county
        self.country = country
        self.countryCode = countryCode
        self.postalCode = postalCode
    }

    public enum CodingKeys: String, CodingKey { 
        case lat
        case lon
        case displayName = "display_name"
        case houseNumber = "house_number"
        case road
        case neighborhood
        case suburb
        case city
        case county
        case country
        case countryCode = "country_code"
        case postalCode = "postal_code"
    }


}

